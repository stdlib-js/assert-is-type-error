{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar typeOf = require( '@stdlib/utils-type-of' );\nvar isError = require( '@stdlib/assert-is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `TypeError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `TypeError` object\n*\n* @example\n* var bool = isTypeError( new TypeError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isTypeError( {} );\n* // returns false\n*/\nfunction isTypeError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `TypeError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof TypeError ) {\n\t\treturn true;\n\t}\n\t// All `TypeError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'typeerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypeError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `TypeError` object.\n*\n* @module @stdlib/assert-is-type-error\n*\n* @example\n* var isTypeError = require( '@stdlib/assert-is-type-error' );\n*\n* var bool = isTypeError( new TypeError( 'beep' ) );\n* // returns true\n*\n* bool = isTypeError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isTypeError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypeError;\n"],"names":["getPrototypeOf","require$$0","typeOf","require$$1","isError","require$$2","lib","value","TypeError"],"mappings":";;8PAsBA,IAAIA,EAAiBC,EACjBC,EAASC,EACTC,EAAUC,EA2Cd,ICzBAC,EDCA,SAAsBC,GACrB,GAAsB,iBAAVA,GAAgC,OAAVA,EACjC,OAAO,EAGR,GAAKA,aAAiBC,UACrB,OAAO,EAGR,GAAKJ,EAASG,GAEb,KAAQA,GAAQ,CACf,GAAyB,cAApBL,EAAQK,GACZ,OAAO,EAERA,EAAQP,EAAgBO,GAG1B,OAAO"}